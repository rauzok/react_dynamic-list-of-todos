{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","filterTodos","filterTitle","onChangeFilterStatus","selectUser","selectedUser","className","type","value","onChange","event","name","map","id","title","completed","userId","key","checked","readOnly","onClick","API_URL","allTodos","point","fetch","then","response","json","CurrentUser","state","user","this","props","data","setState","prevProps","email","phone","clearUser","React","Component","App","selectedUserId","filterStatus","target","todosFiltred","renderTodos","filter","todo","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64cc658b.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  filterTodos,\n  filterTitle,\n  onChangeFilterStatus,\n  selectUser,\n  selectedUser,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <label>\n        Enter a task\n        <input\n          className=\"TodoList__title-search\"\n          type=\"text\"\n          value={filterTitle}\n          onChange={event => filterTodos(event)}\n        />\n      </label>\n\n      <label>\n        Filter tasks\n        <select\n          name=\"TodoList__todo-status\"\n          className=\"TodoList__status-select\"\n          onChange={event => onChangeFilterStatus(event)}\n        >\n          <option>all</option>\n\n          <option>active</option>\n\n          <option>completed</option>\n        </select>\n      </label>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(({ id, title, completed, userId }) => (\n          <li\n            key={id}\n            className={\n              completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked'\n            }\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                readOnly\n              />\n              <p>{title}</p>\n            </label>\n\n            <button\n              className={\n                userId === selectedUser\n                  ? `\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    `\n                  : 'TodoList__user-button button'\n              }\n              type=\"button\"\n              onClick={() => {\n                selectUser(userId);\n              }}\n            >\n              {`User: #${userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  filterTodos: PropTypes.func.isRequired,\n  filterTitle: PropTypes.string.isRequired,\n  onChangeFilterStatus: PropTypes.func.isRequired,\n  selectedUser: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-api.herokuapp.com`;\n\nexport function allTodos(point, id) {\n  return fetch(\n    id ? `${API_URL}${point}${id}` : `${API_URL}${point}`,\n  )\n    .then(response => response.json());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { allTodos } from '../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    allTodos('/users', `/${this.props.userId}`)\n      .then(({ data }) => this.setState({ user: { ...data } }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      allTodos('/users', `/${this.props.userId}`)\n        .then(({ data }) => this.setState({ user: { ...data } }));\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { allTodos } from './components/api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    filterTitle: '',\n    filterStatus: 'all',\n  };\n\n  componentDidMount() {\n    allTodos('/todos')\n      .then(({ data }) => this.setState({ todos: [...data] }));\n  }\n\n  filterTodos = (event) => {\n    this.setState({ filterTitle: event.target.value });\n  }\n\n  onChangeFilterStatus = (event) => {\n    this.setState({ filterStatus: event.target.value });\n  }\n\n  selectUser = (userId) => {\n    this.setState((state) => {\n      if (state.selectedUserId === userId) {\n        return state;\n      }\n\n      return {\n        ...state,\n        selectedUserId: userId,\n      };\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  todosFiltred = () => {\n    const { todos, filterTitle, filterStatus } = this.state;\n\n    let renderTodos = [...todos];\n\n    if (filterTitle) {\n      renderTodos = [...renderTodos].filter(todo => (\n        (`${todo.title}`).toLowerCase().includes(filterTitle.toLowerCase())\n      ));\n    }\n\n    if (filterStatus === 'active') {\n      renderTodos = [...renderTodos].filter(todo => !todo.completed);\n    }\n\n    if (filterStatus === 'completed') {\n      renderTodos = [...renderTodos].filter(todo => todo.completed);\n    }\n\n    return renderTodos;\n  }\n\n  render() {\n    const { selectedUserId, filterTitle } = this.state;\n\n    const renderTodos = this.todosFiltred();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={renderTodos}\n            filterTodos={this.filterTodos}\n            filterTitle={filterTitle}\n            onChangeFilterStatus={this.onChangeFilterStatus}\n            selectUser={this.selectUser}\n            selectedUser={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}